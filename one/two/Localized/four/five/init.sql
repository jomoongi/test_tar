-- SITE USER TABLE 
CREATE TABLE SITE_USER (
  ID INTEGER NOT NULL PRIMARY KEY, 
  USER_NAME VARCHAR(256), 
  PASSWORD VARCHAR(256)
) ; 


--SITE ROLE TABLE 
CREATE TABLE SITE_ROLE(
  ID NUMBER NOT NULL PRIMARY KEY , 
  NAME VARCHAR(256)  NOT NULL ,
  TYPE NUMBER DEFAULT 2 NOT NULL , 
  DESCRIPTION VARCHAR(256) ,
  CONSTRAINT TYPE_CK CHECK (TYPE IN (0,1,2)) 
) ; 

COMMENT ON COLUMN SITE_ROLE.TYPE IS '0 : Checker , 1 : Maker, 2 : Other'; 


CREATE INDEX SITE_ROLE_INDX ON SITE_ROLE(NAME) ;
CREATE SEQUENCE SITE_ROLE_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 CYCLE; 


--SITE ROLE RELATION
CREATE TABLE SITE_ROLE_REL(
  SITE_ROLE_ID NUMBER NOT NULL , 
  DIM_ROLE_NAME VARCHAR(256) NOT NULL
) ; 

CREATE INDEX SITE_ROLE_REL_INDX ON SITE_ROLE_REL(SITE_ROLE_ID);
CREATE INDEX SITE_ROLE_REL_INDX1 ON SITE_ROLE_REL(DIM_ROLE_NAME);

CREATE TABLE SITE_PAGE(
  ID NUMBER NOT NULL PRIMARY KEY , 
  PARENT_ID NUMBER , 
  TITLE VARCHAR(512) NOT NULL , 
  URL VARCHAR(512) , 
  COMPONENT_NAME VARCHAR(512), 
  DESCRIPTION VARCHAR(512), 
  ACTIVE INTEGER DEFAULT 1 NOT NULL  
); 
 
CREATE TABLE SITE_ROLE_PAGE_REL(
  SITE_ROLE_ID NUMBER NOT NULL, 
  PAGE_ID NUMBER NOT NULL
); 

CREATE INDEX SITE_ROLE_PAGE_REL_INDX ON SITE_ROLE_PAGE_REL(SITE_ROLE_ID) ; 

CREATE TABLE SECURITY_MATRIX_REQUEST(
  ELEMENT_ID NUMBER NOT NULL PRIMARY KEY, 
  REQUEST_ID NUMBER NOT NULL , 
  ROLE_ID NUMBER NOT NULL , 
  PAGE_ID NUMBER NOT NULL, 
  ACTION          INTEGER NOT NULL,
  COMMAND_RESULT	INTEGER DEFAULT 0 NOT NULL ,
  CONSTRAINT SECURITY_MATRIX_ACTION_CK CHECK (ACTION IN (1,3)), 
  CONSTRAINT SECURITY_MATRIX_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
); 

CREATE INDEX SECURITY_MATRIX_REQUEST_INDX ON SECURITY_MATRIX_REQUEST(ELEMENT_ID, REQUEST_ID) ; 


CREATE TABLE SITE_PRIVILEGE (
  ID NUMBER NOT NULL PRIMARY KEY, 
  PAERNT_ID NUMBER , 
  OPERATION VARCHAR(512) NOT NULL , 
  MAKER NUMBER DEFAULT 0 NOT NULL , 
  CHECKER NUMBER DEFAULT 0 NOT NULL , 
  LIBRARIAN NUMBER DEFAULT 0 NOT NULL, 
  ADMIN NUMBER DEFAULT 0 NOT NULL 
) ; 



CREATE TABLE REQUEST (
  ID NUMBER NOT NULL PRIMARY KEY, 
  USER_NAME VARCHAR(256) NOT NULL, 
  TITLE VARCHAR(256) NOT NULL ,
  SUPPORTING_DOCUMENTS VARCHAR(256), 
  REASON VARCHAR(256), 
  STATE INTEGER DEFAULT 0 NOT NULL, 
  GRANTOR VARCHAR(256),
  CREATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,  
  REQUEST_DATE TIMESTAMP , 
  STATE_CHANGE_DATE TIMESTAMP, 
  CONSTRAINT STATE_CK CHECK  (STATE >= 0 AND STATE <= 5)
) ; 

COMMENT ON COLUMN REQUEST.STATE IS '0 : 생성 , 1 : 승인 요청 , 2 : 반려, 3 : 승인 실패 , 4 : 승인 완료 , 5 : 승인부분실패'; 

CREATE INDEX REQUEST_INDX ON REQUEST(CREATE_DATE, STATE, USER_NAME) ; 
CREATE INDEX REQUEST_INDX_1 ON REQUEST(CREATE_DATE, STATE) ; 
CREATE SEQUENCE REQUEST_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 CYCLE; 
CREATE SEQUENCE REQUEST_ELEMENT_SEQ  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 CYCLE; 

-------------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE USER_PROFILE 
(
	ELEMENT_ID       NUMBER NOT NULL, 
	REQUEST_ID       NUMBER NOT NULL,
	USER_NAME        VARCHAR2 (100) NOT NULL,
	PCMS_DB          VARCHAR2 (100),
	BASE_DB          VARCHAR2 (100),
	GROUP_ID         VARCHAR2 (100),
	SITE             VARCHAR2 (100),
	DEPT             VARCHAR2 (40),
	FULL_USER_NAME   VARCHAR2 (200),
	PHONE            VARCHAR2 (100),
	EMAIL_ADDR       VARCHAR2 (256),
	WORKSET          VARCHAR2 (100),
	ACTION           INTEGER  NOT NULL,
	COMMAND_RESULT			 INTEGER DEFAULT 0 NOT NULL , 
	CONSTRAINT USER_PROIFLE_PK PRIMARY KEY (REQUEST_ID, ELEMENT_ID), 
    CONSTRAINT USER_PROFILE_ACTION_CK CHECK (ACTION IN (1,2,3)),
    CONSTRAINT USER_PROIFLE_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
);

COMMENT ON COLUMN USER_PROFILE.ACTION IS '1 : 입력, 2 : 수정, 3 : 삭제'; 
COMMENT ON COLUMN USER_PROFILE.COMMAND_RESULT IS '0 : Not Run, 1 : SUCCESS, -1 : FAILED'; 
CREATE INDEX USER_PROFILE_INDX ON USER_PROFILE(USER_NAME) ; 
--------------------------------------------------------------------------------------------------------------------------------------



CREATE TABLE GROUP_MEMBERS(
   	ELEMENT_ID       NUMBER NOT NULL PRIMARY KEY , 
	REQUEST_ID       NUMBER NOT NULL,
    USER_NAME     VARCHAR2(100) NOT NULL,
    GROUP_NAME    VARCHAR2(200) NOT NULL,
    ACTION        INTEGER  NOT NULL,
    COMMAND_RESULT			 INTEGER DEFAULT 0 NOT NULL  ,
    CONSTRAINT GROUP_MEMBERS_ACTION_CK CHECK (ACTION IN (1,2,3)),
    CONSTRAINT GROUP_MEMBERS_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
);

COMMENT ON COLUMN GROUP_MEMBERS.ACTION IS '1 : ADD , 3 : REMOVE';
COMMENT ON COLUMN GROUP_MEMBERS.COMMAND_RESULT IS '0 : Not Run, 1 : SUCCESS, -1 : FAILED'; 
CREATE INDEX GROUP_MEMBERS_INDX ON GROUP_MEMBERS(REQUEST_ID) ; 
---------------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE USER_GROUPS 
(
	ELEMENT_ID       NUMBER NOT NULL PRIMARY KEY , 
	REQUEST_ID       NUMBER NOT NULL,
	GROUP_NAME       VARCHAR2 (100) NOT NULL,
	DESCRIPTION      VARCHAR2 (4000),
    ACTION           INTEGER NOT NULL,
    COMMAND_RESULT			 INTEGER  DEFAULT 0 NOT NULL ,
    CONSTRAINT USER_GROUPS_ACTION_CK CHECK (ACTION IN (1, 2, 3)), 
    CONSTRAINT USER_GROUPS_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
);

COMMENT ON COLUMN USER_GROUPS.ACTION IS '1 : 생성, 3 : 삭제'; 
COMMENT ON COLUMN USER_GROUPS.COMMAND_RESULT IS '0 : Not Run, 1 : SUCCESS, -1 : FAILED'; 
CREATE INDEX USER_GROUPS_INDX ON USER_GROUPS(REQUEST_ID) ; 

----------------------------------------------------------------------------------------------------------------------------------------



CREATE TABLE RM_ROLES(
    ELEMENT_ID       NUMBER NOT NULL PRIMARY KEY , 
	REQUEST_ID       NUMBER NOT NULL,
    ROLE            VARCHAR2(100) NOT NULL,
    ROLE_DESC       VARCHAR2(960),
    ACTION          INTEGER NOT NULL,
    COMMAND_RESULT			 INTEGER DEFAULT 0 NOT NULL ,
    CONSTRAINT RM_ROLES_ACTION_CK CHECK (ACTION IN (1, 2, 3)), 
    CONSTRAINT RM_ROLES_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
 );
COMMENT ON COLUMN RM_ROLES.ACTION IS '1 : 입력, 2 : 수정, 3 : 삭제'; 
COMMENT ON COLUMN RM_ROLES.COMMAND_RESULT IS '0 : Not Run, 1 : SUCCESS, -1 : FAILED'; 
CREATE INDEX RM_ROLES_INDX ON RM_ROLES(REQUEST_ID) ;
CREATE INDEX RM_ROLES_INDX1 ON RM_ROLES(ROLE) ;
-----------------------------------------------------------------------------------------------------------------------------------------



CREATE TABLE ROLE_ASSIGN(
   	ELEMENT_ID       NUMBER NOT NULL PRIMARY KEY , 
	REQUEST_ID       NUMBER NOT NULL,
    USER_NAME       VARCHAR2(100),
    GROUP_NAME      VARCHAR2(100),
    WORKSET         VARCHAR2(100),
    ROLE            VARCHAR2(100),
    TYPE            VARCHAR2(1),
    CAPABILITY      VARCHAR2(10) ,
    PRODUCT_ID      VARCHAR2(100) NOT NULL,
    PART_ID         VARCHAR2(100) NOT NULL,
    VARIANT         VARCHAR2(100),
    ACTION          INTEGER NOT NULL, 
    COMMAND_RESULT			 INTEGER DEFAULT 0 NOT NULL  ,
    CONSTRAINT ROLE_ASSIGN_STATUS_CK CHECK  (ACTION IN (1, 2, 3)), 
    CONSTRAINT ROLE_ASSIGN_RESULT_CK CHECK (COMMAND_RESULT IN (0, 1, -1))
);

COMMENT ON COLUMN ROLE_ASSIGN.ACTION IS '1 : 입력, 2 : 수정, 3 : 삭제'; 
COMMENT ON COLUMN ROLE_ASSIGN.COMMAND_RESULT IS '0 : Not Run, 1 : SUCCESS, -1 : FAILED'; 
CREATE INDEX ROLE_ASSIGN_INDX ON ROLE_ASSIGN(REQUEST_ID) ; 
CREATE INDEX ROLE_ASSIGN_INDX1 ON ROLE_ASSIGN(ROLE) ;


CREATE TABLE COMMAND_FAILURE(
	REQUEST_ID       NUMBER NOT NULL,
	ELEMENT_ID       NUMBER NOT NULL, 
	COMMAND 	VARCHAR(1024), 
	MESSAGE 	VARCHAR(1024)
); 
CREATE INDEX COMMAND_FAILURE_INDX ON COMMAND_FAILURE(REQUEST_ID, ELEMENT_ID); 